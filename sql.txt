#一：创建表
#1.mysql -uroot -p111111
#创建数据库
create database lxhomework charset utf8;
#选择数据库
use lxhomework;

#年级表
#4.
create table class_grade(
    gid int primary key auto_increment,
    gname char(20) not null
);

#老师表
create table teacher(
    tid int primary key auto_increment,
    tname char(20) not null
);

#班级表
create table class(
    cid int primary key auto_increment,
    caption char(20) not null,
    grade_id int,
    foreign key(grade_id) references class_grade(gid)
);

#学生表
create table student(
    sid int primary key auto_increment,
    sname char(20) not null,
    gender enum('男','女') not null default '男',
    class_id int,
    foreign key(class_id) references class(cid)
);

#课程表
create table course(
    cid int primary key auto_increment,
    cname char(20) not null,
    teacher_id int,
    foreign key(teacher_id) references teacher(tid)
);

#成绩表
create table score(
    sid int primary key auto_increment,
    student_id int,
    course_id int,
    score int not null,
    foreign key(student_id) references student(sid),
    foreign key(course_id) references course(cid)
);

#班级任职表
create table teach2cls(
    tcid int primary key auto_increment,
    tid int,
    cid int,
    foreign key(tid) references teacher(tid),
    foreign key(cid) references class(cid)
);


#二：
#1.自行创建测试数据

#年级表插入数据
insert into class_grade(gname) values
('一年级'),
('二年级'),
('三年级');

#老师表插入数据
insert into teacher(tname) values
('张三'),
('李四'),
('王五');

#班级表插入数据
insert into class(caption,grade_id) values
('一年一班',1),
('二年一班',2),
('三年二班',3);

#学生表插入数据
insert into student(sname,gender,class_id) values
('乔丹','女',1),
('艾弗森','女',1),
('科比','男',2);

#课程表插入数据
insert into course(cname,teacher_id) values
('生物',1),
('体育',1),
('物理',2);

#成绩表插入数据
insert into score(student_id,course_id,score) values
(1,1,60),
(1,2,59),
(2,2,99);

#班级任职表插入数据
insert into teach2cls(tid,cid) values
(1,1),
(1,2),
(2,1),
(3,2);

#2.查询学生总人数
select count(sid) from student;


#3.查询生物课程和物理课程成绩都及格的学生id和姓名
select sid,sname from student where sid in
(select student_id from score inner join course on score.course_id = course.cid where cname = '生物'and score > 60)
and sid in
(select student_id from score inner join course on score.course_id = course.cid where cname = '物理'and score > 60);


#4.查询每个年级的班级数，取出班级数最多的前三个年级
select gname from (
    select gname,count(caption) as num from class inner join class_grade on class.grade_id = class_grade.gid group by gname
) as t1 order by t1.num desc limit 3;

#5.查询平均成绩最高和最低的学生的id和姓名以及平均成绩
select sid,sname,最高平均成绩 from student inner join (
(select student_id, avg(score) as '最高平均成绩' from score inner join course on score.course_id = course.cid
    group by student_id order by avg(score) desc limit 1)) as t2 on student.sid = t2.student_id;

select sid,sname,最低平均成绩 from student inner join (
(select student_id, avg(score) as '最低平均成绩' from score inner join course on score.course_id = course.cid
    group by student_id order by avg(score) limit 1)) as t2 on student.sid = t2.student_id;


#6.查询每个年级的学生人数
select gname,count(sid) from student inner join (
select cid,gname from class right join class_grade on class.grade_id = class_grade.gid) as t2 on t2.cid = student.class_id
group by gname;

#7.查询每位学生的学号，姓名，选课数，平均成绩
select sid as '学号',sname as '姓名',course_count as '选课数',avg_score as '平均成绩'from student
left join
(
select student_id,count(course_id) as course_count,avg(score) as avg_score from score group by student_id
) as tk
on student.sid = t.student_id;

#8.查询学生编号为“2”的学生的姓名、该学生成绩最高的课程名、成绩最低的课程名及分数；

select * from















