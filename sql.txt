#一：创建表
#1.mysql -uroot -p111111
#创建数据库
create database lxhomework charset utf8;
#选择数据库
use lxhomework;

#年级表
#4.
create table class_grade(
    gid int primary key auto_increment,
    gname char(20) not null
);

#老师表
create table teacher(
    tid int primary key auto_increment,
    tname char(20) not null
);

#班级表
create table class(
    cid int primary key auto_increment,
    caption char(20) not null,
    grade_id int,
    foreign key(grade_id) references class_grade(gid)
);

#学生表
create table student(
    sid int primary key auto_increment,
    sname char(20) not null,
    gender enum('男','女') not null default '男',
    class_id int,
    foreign key(class_id) references class(cid)
);

#课程表
create table course(
    cid int primary key auto_increment,
    cname char(20) not null,
    teacher_id int,
    foreign key(teacher_id) references teacher(tid)
);

#成绩表
create table score(
    sid int primary key auto_increment,
    student_id int,
    course_id int,
    score int not null,
    foreign key(student_id) references student(sid),
    foreign key(course_id) references course(cid)
);

#班级任职表
create table teach2cls(
    tcid int primary key auto_increment,
    tid int,
    cid int,
    foreign key(tid) references teacher(tid),
    foreign key(cid) references class(cid)
);


#二：
#1.自行创建测试数据

#年级表插入数据
insert into class_grade(gname) values
('一年级'),
('二年级'),
('三年级');

#老师表插入数据
insert into teacher(tname) values
('张三'),
('李四'),
('王五');

#班级表插入数据
insert into class(caption,grade_id) values
('一年一班',1),
('二年一班',2),
('三年二班',3);

#学生表插入数据
insert into student(sname,gender,class_id) values
('乔丹','女',1),
('艾弗森','女',1),
('科比','男',2);

#课程表插入数据
insert into course(cname,teacher_id) values
('生物',1),
('体育',1),
('物理',2);

#成绩表插入数据
insert into score(student_id,course_id,score) values
(1,1,60),
(1,2,59),
(2,2,99);

#班级任职表插入数据
insert into teach2cls(tid,cid) values
(1,1),
(1,2),
(2,1),
(3,2);

#2.查询学生总人数
select count(sid) from student;


#3.查询生物课程和物理课程成绩都及格的学生id和姓名
select sid,sname from student where sid in
(select student_id from score inner join course on score.course_id = course.cid where cname = '生物'and score > 60)
and sid in
(select student_id from score inner join course on score.course_id = course.cid where cname = '物理'and score > 60);


#4.查询每个年级的班级数，取出班级数最多的前三个年级
select gname from (
    select gname,count(caption) as num from class inner join class_grade on class.grade_id = class_grade.gid group by gname
) as t1 order by t1.num desc limit 3;

#5.查询平均成绩最高和最低的学生的id和姓名以及平均成绩
select sid,sname,最高平均成绩 from student inner join (
(select student_id, avg(score) as '最高平均成绩' from score inner join course on score.course_id = course.cid
    group by student_id order by avg(score) desc limit 1)) as t2 on student.sid = t2.student_id;

select sid,sname,最低平均成绩 from student inner join (
(select student_id, avg(score) as '最低平均成绩' from score inner join course on score.course_id = course.cid
    group by student_id order by avg(score) limit 1)) as t2 on student.sid = t2.student_id;


#6.查询每个年级的学生人数
select gname,count(sid) from student inner join (
select cid,gname from class right join class_grade on class.grade_id = class_grade.gid) as t2 on t2.cid = student.class_id
group by gname;

#7.查询每位学生的学号，姓名，选课数，平均成绩
select sid as '学号',sname as '姓名',course_count as '选课数',avg_score as '平均成绩'from student
left join
(
select student_id,count(course_id) as course_count,avg(score) as avg_score from score group by student_id
) as tk
on student.sid = t.student_id;

#8.查询学生编号为“2”的学生的姓名、该学生成绩最高的课程名、成绩最低的课程名及分数；
#最高分
select sname,cname,score from student inner join
(select * from score inner join course on score.course_id = course.cid where student_id =2 order by score desc limit 1) as t2
on student.sid = t2.student_id;

#最低分
select sname,cname,score from student inner join
(selec from score inner join course on score.course_id = course.cid where student_id =2 order by score limit 1) as t2
on student.sid = t2.student_id;


#9.查询姓“李”的老师的个数和所带班级数
select * from (
select count(tid) as "李老师个数" from teacher where tname like "李%")as t2,
(select count(tcid) as "班级个数" from teacher inner join teach2cls on teacher.tid = teach2cls.tid where tname like "李%") as t3;

#10.查询班级数小于5的年级id和年级名
select gid ,gname from class_grade inner join class on class_grade.gid = class.grade_id group by gname having count(caption)<5;

#11.查询班级信息，包括班级id、班级名称、年级、年级级别(12为低年级，34为中年级，56为高年级)
select cid as '班级id',caption as '班级名称',gname as '年级',
 case
    when gname in ('一年级','二年级') then '低年级'
    when gname in ('三年级','四年级') then '中年级'
    when gname in ('五年级','六年级') then '高年级'
    else 0
    end as '年级级别'
    from class_grade inner join class on class_grade.gid = class.grade_id;

#12.查询学过“张三”老师2门课以上的同学的学号、姓名
select sid as '学号',sname as '姓名' from student
where sid in
(
    select student_id from score
    where course_id in
    (
        select cid from course
        where teacher_id in
        (select tid from teacher where tname = '张三')
    )
    group by student_id having count(student_id) > 1
) ;

#13.查询教授课程超过2门的老师的id和姓名
select tid ,tname from teacher
where tid in
(select teacher_id from course group by teacher_id having count(cid) >1);

#14.查询学过编号“1”课程和编号“2”课程的同学的学号、姓名
select sid,sname from student where sid in
(select student_id from score where course_id =1 or course_id =2 group by student_id having count(student_id) >1);

#15、查询没有带过高年级的老师id和姓名；
select tid,tname from teacher
  where tid not in
  (select tid from teacher2cls
   left join class
   on teacher2cls.cid = class.cid
   where grade_id in (5,6)
   );

#16、查询学过“张三”老师所教的所有课的同学的学号、姓名；
SELECT DISTINCT sid,sname from student
inner JOIN
(select student_id from score
LEFT JOIN
(select tid,cid from course
LEFT JOIN teacher
on tid = teacher_id
where tname = '张三') as t
on cid = course_id) as t1
on sid = t1.student_id;

#17、查询带过超过2个班级的老师的id和姓名；
select t.tid,tname from teacher t
inner join teacher2cls t_c
on t_c.tid = t.tid
group by t_c.tid
having count(cid)>2;

#18、查询课程编号“2”的成绩比课程编号“1”课程低的所有同学的学号、姓名；
SELECT sid,sname from student
where sid in
(select t1.student_id from
(SELECT student_id,score from score
where course_id = 2) as t1,
(SELECT student_id,score from score
where course_id = 1) as t2
where t1.student_id = t2.student_id and t1.score<t2.score);

#19、查询所带班级数最多的老师id和姓名；
select t.tid,tname from teacher t
INNER JOIN
(select tid,max(count_class) as max_class from
(select tid,count(cid) as count_class from teach2cls
GROUP BY tid) as t1) as t2
on t.tid = t2.tid;

#20、查询有课程成绩小于60分的同学的学号、姓名；
SELECT st.sid,sname from student st
INNER JOIN score sc
on st.sid = sc.student_id
where score <60;

#21、查询没有学全所有课的同学的学号、姓名；
select sid,sname from student
where sid not IN
(SELECT student_id from score
GROUP BY student_id
HAVING count(course_id) = (select count(cid) from course));

#22、查询至少有一门课与学号为“1”的同学所学相同的同学的学号和姓名；
SELECT st.sid,sname from student st
where st.sid in
(select t2.sid from
(select s.sid,sname,course_id from student s
INNER JOIN score
on s.sid = student_id
where s.sid = 1) as t1,
(select s.sid,sname,course_id from student s
INNER JOIN score
on s.sid = student_id
where s.sid <> 1) as t2
where t2.course_id = t1.course_id);


#23、查询至少学过学号为“1”同学所选课程中任意一门课的其他同学学号和姓名；
SELECT st.sid,sname from student st
INNER JOIN score sc
on  st.sid = sc.student_id
where st.sid <> 1
and course_id in
(SELECT course_id from student st
INNER JOIN score sc
on  st.sid = sc.student_id
where st.sid = 1);

#24、查询和“2”号同学学习的课程完全相同的其他同学的学号和姓名；
select sid,sname from student
where sid in
(select t2.student_id from
-- 查询2号所学课程
(SELECT course_id,count(course_id) as course_num from score
where student_id = 2
GROUP BY course_id) as t1,
-- 查询非2号所学课程
(SELECT student_id,course_id,count(course_id) as course_num from score
where student_id <> 2
GROUP BY course_id) as t2
where t1.course_id = t2.course_id and t1.course_num = t2.course_num);

#25、删除学习“张三”老师课的score表记录；
delete from score where score.course_id in (
    select cid from course left join teacher on course.teacher_id = teacher.tid where teacher.tname = '张三'
);
#26、向score表中插入一些记录，这些记录要求符合以下条件：①没有上过编号“2”课程的同学学号；②插入“2”号课程的平均成绩；
insert into score(student_id,course_id,score)
--         ①没有上过编号“2”课程的同学学号；
SELECT t1.sid,t1.course_id,t2.score from
(SELECT student.sid,course_id from student
LEFT JOIN score
on student.sid = score.sid
where course_id <>2) as t1,
--         ②插入“2”号课程的平均成绩；
(SELECT AVG(score) as score from score
where course_id = 2) as t2;

#27、按平均成绩从低到高显示所有学生的“生物”、“体育”、“物理”三门的课程成绩，按如下形式显示： 学生ID,生物,
#体育,物理,和平均分；
select t3.sid as "学生ID",生物,体育,物理,课程数,平均成绩 from (
select student.sid,score as "生物" from student left join (
    select student_id,score  from course inner join score on course.cid = score.course_id where cname = "生物"
) as t2 on student.sid = t2.student_id) as t3 left join
(select student.sid,score as "体育" from student left join (
    select student_id,score  from course inner join score on course.cid = score.course_id where cname = "体育"
) as t2 on student.sid = t2.student_id) as t4 on t3.sid = t4.sid left join
(select student.sid,score as "物理" from student left join (
    select student_id,score  from course inner join score on course.cid = score.course_id where cname = "物理"
) as t2 on student.sid = t2.student_id) as t5 on t3.sid = t5.sid left join (

select student_id,count(course_id) as "课程数",avg(score) as "平均成绩" from course inner join score on course.cid = score.course_id group by student_id
) as t6 on t5.sid = t6.student_id order by "平均成绩" asc;

#28、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分；
select cid as "课程ID",max(score) as 最高分,min(score) as 最低分 from score right join course on score.course_id = course.cid group by course_id order by cid;


#29、按各科平均成绩从低到高和及格率的百分数从高到低顺序；
SELECT course_id,AVG(score) as avg_score,
concat(round(sum(case when score.score >= 60 then 1 else 0 end) / count(1) * 100,2),'%') as percent
 from score
group by course_id
ORDER BY avg_score,percent desc;


#30、课程平均分从高到低显示（现实任课老师）；
select tname,cname,avg(score) as "平均分" from teacher inner join course on teacher.tid = course.teacher_id
inner join score on course.cid = score.course_id group by course_id order by score desc;


#31、查询各科成绩前三名的记录(不考虑成绩并列情况) ；
#生物前三名
select student_id,score as '成绩' from score where course_id =1 order by score desc limit 3;

#体育前三名
select student_id,score as '成绩' from score where course_id =2 order by score desc limit 3;

#物理前三名
select student_id,score as '成绩' from score where course_id =3 order by score desc limit 3;


#32、查询每门课程被选修的学生数；
select cname,count(student_id) as '选修学生数' from score
right join course on course.cid = score.course_id
group by course_id;


#33、查询选修了2门以上课程的全部学生的学号和姓名；
select student_id as '学号',sname as '姓名' from student
left join score on student.sid = score.student_id
group by course_id having count(course_id)>1;


#34、查询男生、女生的人数，按倒序排列；
select gender as '性别',count(gender) as '人数' from student group by gender order by count(gender) desc;

#35、查询姓“张”的学生名单；
select * from student where sname like "张%"


#36、查询同名同姓学生名单，并统计同名人数；
select sname,count(sname) as '同名人数'
from student group by sname having count(sname) >1;
#37、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列；
select avg(score) from score left join course on score.course_id = course.cid
group by course_id
order by avg(score),cid desc ;


#38、查询课程名称为“体育”，且分数低于60的学生姓名和分数；
select sname,score from score left join course on score.course_id = course.cid
inner join student on student.sid = score.student_id where cname = "体育" and score < 60 ;


#39、查询课程编号为“3”且课程成绩在80分以上的学生的学号和姓名；
select student_id,sname from score left join course on score.course_id = course.cid
inner join student on student.sid = score.student_id where cid = 3 and score > 80;


#40、求选修了课程的学生人数
select course_id ,count(student_id) as "选修课程的人数" from score group by course_id;

#41、查询选修“李四”老师所授课程的学生中，成绩最高和最低的学生姓名及其成绩；
select sname,max(score),min(score) from teacher left join course on teacher.tid = course.teacher_id
left join score on score.course_id = course.cid
left join student on student.sid = score.student_id
where tname = "李四";


#42、查询各个课程及相应的选修人数；
select course_id ,count(student_id) as "选修课程的人数" from score group by course_id;


#43、查询不同课程但成绩相同的学生的学号、课程号、学生成绩；
select * from score as t1,score as t2
where t1.student_id != t2.student_id and t1.course_id != t2.course_id and t1.score = t2.score;


#44、查询每门课程成绩最好的前两名学生id和姓名；
#生物前2名
select student_id,sname  from score left join student on score.student_id = student.sid where course_id =1 order by score desc limit 2;

#体育前2名
select student_id,sname  from score left join student on score.student_id = student.sid where course_id =2 order by score desc limit 2;

#物理前2名
select student_id,sname  from score left join student on score.student_id = student.sid where course_id =3 order by score desc limit 2;
#45、检索至少选修两门课程的学生学号；
select student_id from score group by course_id having count(course_id) >1;

#46、查询没有学生选修的课程的课程号和课程名；
select cname,cid from course left join score on course.cid = score.course_id where student_id is NULL;

#47、查询没带过任何班级的老师id和姓名；
select * from teacher left join teach2cls on teacher.tid = teach2cls.tid where cid is NULL;

#48、查询有两门以上课程超过80分的学生id及其平均成绩；
SELECT student_id, AVG(score)
FROM score
WHERE score.score > 80
GROUP BY student_id
HAVING COUNT(score.course_id) >= 2;

#49、检索“3”课程分数小于60，按分数降序排列的同学学号；
SELECT student_id, score
FROM score
WHERE score.course_id = 3 AND score.score < 60
ORDER BY student_id DESC;
#50、删除编号为“2”的同学的“1”课程的成绩；
DELETE FROM score
WHERE score.sid =
    (SELECT t1.sid
    FROM
        (SELECT sid
        FROM score AS s1
        WHERE student_id = 2 AND course_id = 1) AS t1
    );
#51、查询同时选修了物理课和生物课的学生id和姓名；
SELECT sid, sname
FROM student
WHERE sid IN
    (SELECT student_id
    FROM score
    WHERE course_id IN
        (SELECT cid
        FROM course
        WHERE course.cname IN ('物理','生物'))
    GROUP BY student_id
    HAVING count(course_id) = 2
    );













